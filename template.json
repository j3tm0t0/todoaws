{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Resources": {
    "createTodo": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "LambdaExecutionRole",
            "Arn"
          ]
        },
        "Code": {
          "ZipFile": "// Generated by CoffeeScript 1.10.0\nvar AWS, docClient;\n\nAWS = require('aws-sdk');\n\ndocClient = new AWS.DynamoDB.DocumentClient();\n\nexports.handler = function(event, context) {\n  var item, param, uuid;\n  if (event.todoId) {\n    return context.fail(\"todoId cannot not be specified\");\n  } else {\n    uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n      var r, v;\n      r = Math.random() * 16 | 0;\n      v = c === 'x' ? r : r & 0x3 | 0x8;\n      return v.toString(16);\n    });\n    item = event;\n    item.todoId = uuid;\n    item.createdAt = Math.floor(new Date / 1000);\n    item.finishedAt = 0;\n    param = {\n      TableName: 'todos',\n      Item: item\n    };\n  }\n  docClient.put(param, function(err, data) {\n    if (err) {\n      return context.fail(err);\n    } else {\n      return context.succeed(item);\n    }\n  });\n};\n"
        },
        "Runtime": "nodejs",
        "Timeout": "60"
      }
    },
    "deleteTodo": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "LambdaExecutionRole",
            "Arn"
          ]
        },
        "Code": {
          "ZipFile": "// Generated by CoffeeScript 1.10.0\nvar AWS, docClient;\n\nAWS = require('aws-sdk');\n\ndocClient = new AWS.DynamoDB.DocumentClient();\n\nexports.handler = function(event, context) {\n  var param;\n  if (event.todoId) {\n    param = {\n      TableName: 'todos',\n      Key: {\n        todoId: event.todoId\n      },\n      ReturnValues: \"ALL_OLD\"\n    };\n  } else {\n    return context.fail(\"todoId is not specified\");\n  }\n  docClient[\"delete\"](param, function(err, data) {\n    console.log(err, data);\n    if (err) {\n      return context.fail(err);\n    } else if (data.Attributes) {\n      return context.succeed(\"\");\n    } else {\n      return context.fail(\"item not found\");\n    }\n  });\n};\n"
        },
        "Runtime": "nodejs",
        "Timeout": "60"
      }
    },
    "getTodo": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "LambdaExecutionRole",
            "Arn"
          ]
        },
        "Code": {
          "ZipFile": "// Generated by CoffeeScript 1.10.0\nvar AWS, docClient;\n\nAWS = require('aws-sdk');\n\ndocClient = new AWS.DynamoDB.DocumentClient();\n\nexports.handler = function(event, context) {\n  var param;\n  if (event.todoId) {\n    param = {\n      TableName: 'todos',\n      Key: {\n        todoId: event.todoId\n      }\n    };\n  } else {\n    return context.fail(\"todoId is not specified\");\n  }\n  docClient.get(param, function(err, data) {\n    if (err) {\n      return context.fail(err);\n    } else if (data.Item) {\n      return context.succeed(data.Item);\n    } else {\n      return context.fail(\"item not found\");\n    }\n  });\n};\n"
        },
        "Runtime": "nodejs",
        "Timeout": "60"
      }
    },
    "listTodos": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "LambdaExecutionRole",
            "Arn"
          ]
        },
        "Code": {
          "ZipFile": "// Generated by CoffeeScript 1.10.0\nvar AWS, docClient;\n\nAWS = require('aws-sdk');\n\ndocClient = new AWS.DynamoDB.DocumentClient();\n\nexports.handler = function(event, context) {\n  var param;\n  param = {\n    TableName: 'todos'\n  };\n  docClient.scan(param, function(err, data) {\n    if (err) {\n      return context.fail(err);\n    } else {\n      return context.succeed(data.Items);\n    }\n  });\n};\n"
        },
        "Runtime": "nodejs",
        "Timeout": "60"
      }
    },
    "updateTodo": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "LambdaExecutionRole",
            "Arn"
          ]
        },
        "Code": {
          "ZipFile": "// Generated by CoffeeScript 1.10.0\nvar AWS, docClient;\n\nAWS = require('aws-sdk');\n\ndocClient = new AWS.DynamoDB.DocumentClient();\n\nexports.handler = function(event, context) {\n  var param;\n  if (event.todoId) {\n    param = {\n      TableName: 'todos',\n      Key: {\n        todoId: event.todoId\n      }\n    };\n  } else {\n    return context.fail(\"todoId is not specified\");\n  }\n  docClient.get(param, function(err, data) {\n    var item, key, value;\n    if (err) {\n      return context.fail(err);\n    } else if (data.Item) {\n      item = data.Item;\n      for (key in event) {\n        value = event[key];\n        item[key] = value;\n      }\n      param = {\n        TableName: 'todos',\n        Item: item\n      };\n      docClient.put(param, function(err, data) {\n        if (err) {\n          return context.fail(err);\n        } else {\n          return context.succeed(item);\n        }\n      });\n    } else {\n      return context.fail(\"item not found\");\n    }\n  });\n};\n"
        },
        "Runtime": "nodejs",
        "Timeout": "60"
      }
    },
    "DynamoDB": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "AttributeDefinitions": [
          {
            "AttributeName": "todoId",
            "AttributeType": "S"
          }
        ],
        "KeySchema": [
          {
            "AttributeName": "todoId",
            "KeyType": "HASH"
          }
        ],
        "ProvisionedThroughput": {
          "ReadCapacityUnits": "1",
          "WriteCapacityUnits": "1"
        },
        "TableName": "todos"
      }
    },
    "LambdaExecutionRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Path": "/",
        "Policies": [
          {
            "PolicyName": "LambdaBasicExecutionPlusDynamoDB",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents"
                  ],
                  "Resource": "arn:aws:logs:*:*:*"
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "dynamodb:PutItem",
                    "dynamodb:GetItem",
                    "dynamodb:Scan",
                    "dynamodb:DeleteItem"
                  ],
                  "Resource": {
                    "Fn::Join": [
                      ":",
                      [
                        "arn:aws:dynamodb",
                        {
                          "Ref": "AWS::Region"
                        },
                        {
                          "Ref": "AWS::AccountId"
                        },
                        "table/todos"
                      ]
                    ]
                  }
                }
              ]
            }
          }
        ]
      }
    }
  }
}
